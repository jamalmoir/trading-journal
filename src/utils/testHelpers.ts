import Types from 'Types';
import { Money } from './moolah';
import Big from 'big.js';


export const testTrades: () => Types.Trade[] = () => ([
    // Winner, Long
	{
    id: '1',
    journalId: '1',
    created: new Date('2019/10/30'),
    modified: new Date('2019/10/30'),
    instrument: 'GBPJPY',
    strategy: 'Strategy 1',
    kind: 'long',
    entryDate: new Date('2019/10/30'),
    entryPrice: new Big(100),
    positionSize: new Big(1000),
    stopLoss: new Big(99),
    takeProfit: new Big(102),
    exitDate: new Date('2019/10/30'),
    exitPrice: new Big(103),
    fees: new Money('150', 'JPY'),
    pl: new Money('1850', 'JPY'),
    hitTakeProfit: true,
    mfe: new Big(102),
    mae: new Big(100),
    tags: [{id: 'monday', name: 'monday'}],
    entryComment: '',
    duringComment: '',
    exitComment: '',
    flag: false,
    entryEmotion: [{id: 'calm', name: 'calm'}],
    exitEmotion: [{id: 'collected', name: 'collected'}],
    rating: 1,
    charts: [],
    },
    // Loser, Short
	{
    id: '2',
    journalId: '1',
    created: new Date('2019/10/31'),
    modified: new Date('2019/10/31'),
    instrument: 'USDJPY',
    strategy: 'Strategy 2',
    kind: 'short',
    entryDate: new Date('2019/10/31'),
    entryPrice: new Big(90),
    positionSize: new Big(500),
    stopLoss: new Big(91),
    takeProfit: new Big(88),
    exitDate: new Date('2019/10/31'),
    exitPrice: new Big(91),
    fees: new Money('150', 'JPY'),
    pl: new Money('-650', 'JPY'),
    hitTakeProfit: false,
    mfe: new Big(89),
    mae: new Big(91),
    tags: [],
    entryComment: '',
    duringComment: '',
    exitComment: '',
    flag: true,
    entryEmotion: [{id: 'rushed', name: 'rushed'}],
    exitEmotion: [{id: 'worried', name: 'worried'}],
    rating: -1,
    charts: [],
    },
    // Unfinished, Short
	{
    id: '3',
    journalId: '1',
    created: new Date('2019/10/31'),
    modified: new Date('2019/10/31'),
    instrument: 'EURJPY',
    strategy: 'Strategy 3',
    kind: 'short',
    entryDate: new Date('2019/10/31'),
    entryPrice: new Big(90),
    positionSize: new Big(500),
    stopLoss: new Big(91),
    takeProfit: new Big(88),
    exitDate: null,
    exitPrice: null,
    fees: null,
    pl: null,
    hitTakeProfit: null,
    mfe: null,
    mae: null,
    tags: [],
    entryComment: '',
    duringComment: '',
    exitComment: '',
    flag: false,
    entryEmotion: [{id: 'rushed', name: 'rushed'}],
    exitEmotion: [],
    rating: null,
    charts: [],
    },
    // Other journal, unfinished, Short
	{
    id: '4',
    journalId: '2',
    created: new Date('2019/10/31'),
    modified: new Date('2019/10/31'),
    instrument: 'EURJPY',
    strategy: 'Strategy 3',
    kind: 'short',
    entryDate: new Date('2019/10/31'),
    entryPrice: new Big(90),
    positionSize: new Big(500),
    stopLoss: new Big(91),
    takeProfit: new Big(88),
    exitDate: null,
    exitPrice: null,
    fees: null,
    pl: null,
    hitTakeProfit: null,
    mfe: null,
    mae: null,
    tags: [],
    entryComment: '',
    duringComment: '',
    exitComment: '',
    flag: false,
    entryEmotion: [{id: 'rushed', name: 'rushed'}],
    exitEmotion: [],
    rating: null,
    charts: [],
    },
    // Other user, Short
	{
    id: '5',
    journalId: '3',
    created: new Date('2019/10/31'),
    modified: new Date('2019/10/31'),
    instrument: 'EURJPY',
    strategy: 'Strategy 3',
    kind: 'short',
    entryDate: new Date('2019/10/31'),
    entryPrice: new Big(90),
    positionSize: new Big(500),
    stopLoss: new Big(91),
    takeProfit: new Big(88),
    exitDate: null,
    exitPrice: null,
    fees: null,
    pl: null,
    hitTakeProfit: null,
    mfe: null,
    mae: null,
    tags: [],
    entryComment: '',
    duringComment: '',
    exitComment: '',
    flag: false,
    entryEmotion: [{id: 'rushed', name: 'rushed'}],
    exitEmotion: [],
    rating: null,
    charts: [],
    },
])

export const testJournals: () => Types.Journal[] = () => ([
    // Live
	{
        id: '1',
        userId: '1',
        kind: 'live',
        currency: 'JPY',
        name: 'Test Live Journal',
        created: new Date('2019/10/20'),
        modified: new Date('2019/10/20'),
        tradeCount: 0,
    },
    // Demo
	{
        id: '2',
        userId: '1',
        kind: 'demo',
        currency: 'JPY',
        name: 'Test Demo Journal',
        created: new Date('2019/10/20'),
        modified: new Date('2019/10/20'),
        tradeCount: 0,
    },
    // Other user
	{
        id: '3',
        userId: '2',
        kind: 'live',
        currency: 'JPY',
        name: 'Other User Test Live Journal',
        created: new Date('2019/10/20'),
        modified: new Date('2019/10/20'),
        tradeCount: 0,
    },
]);